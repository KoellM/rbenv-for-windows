# Usage: rbenv rehash
# Summary: Rehash rbenv shims (run this after installing executables)


<# How does this work?

1. when rbenv shell has set

    Running a command will search path, now, the $env:RBENV_VERSION has set.
    It make the specified version's bin path at the top.

2. when

#>


$GEM_REHASH_TEMPLATE = @'
# Auto generated by 'rbenv rehash'
. $env:RBENV_ROOT\rbenv\lib\version.ps1

$eveutable_bat = <exeutable_name_dot_bat>

if ($env:RBENV_VERSON) {
    & $PSScriptRoot\$exeutable_bat $args
    return $lastExitCode
}

$version = get_local_version

if ($null -eq $version) {
  echo "original script"
  & $PSScriptRoot\$exeutable_bat $args

} else {
  echo "version $version"
  $bat = get_executable_location_by_version "$exeutable_bat" $version

  & $bat $args
}
'@


$RUBYEXE_REHASH_TEMPLATE = @'



'@

# $gem_name shouldn't have suffix
function rehash_for_a_single_gem_bin ($where, $gem_name) {
    $rehashed = $REHASH_TEMPLATE -replace '<exeutable_name_dot_bat>', "$gem_name.bat"

    Set-Content "$where\$cmd.ps1" $rehashed
}


function rehash_for_ruby_exe () {

}

function rehash_for_newly_installed_ruby ($cmd) {

}

function rehash_all ($where) {

}


Write-Host $REHASH_TEMPLATE
