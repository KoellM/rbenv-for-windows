# Usage: rbenv rehash [<version>]
# Summary: Rehash rbenv shims (run this after installing executables)
# Help: rbenv rehash         => rehash all for current global version
# rbenv rehash version => rehash all for a specific version
#

<# How does this work?

1. when rbenv shell is set

    Running a command will search path, now, the $env:RBENV_VERSION has set.
    It make the specified version's bin path at the top.

2. when rbenv global is set



#>

param($cmd)

$GEM_REHASH_TEMPLATE = @'
# Auto generated by 'rbenv rehash'
. $env:RBENV_ROOT\rbenv\lib\version.ps1

$executable_bat = "<executable_name_dot_bat>"

if ($env:RBENV_VERSION) {
    & $PSScriptRoot\$executable_bat $args
    exit $lastExitCode
}

$version = get_local_version

if ($null -eq $version) {
  # echo "original script"
  & $PSScriptRoot\$executable_bat $args

} else {
  # echo "version $version"
  $bat = get_executable_location_by_version "$executable_bat" $version

  & $bat $args
}
'@


$RUBYEXE_REHASH_TEMPLATE = @'
# Auto generated by 'rbenv rehash'
. $env:RBENV_ROOT\rbenv\lib\version.ps1

$executable_exe = "<executable_name_dot_exe>"

if ($env:RBENV_VERSION) {
    & $PSScriptRoot\$executable_exe $args
    exit $lastExitCode
}

$version = get_local_version

if ($null -eq $version) {
  # echo "original ruby"
  & $PSScriptRoot\$executable_exe $args
} else {
  # echo "version $version ruby"
  $rubyexe = get_rubyexe_location_by_version "$executable_exe" $version

  & $rubyexe $args
}
'@


# called every time after you install a gem
#
# $gem_name shouldn't have suffix
#
function rehash_for_a_single_gem ($where, $gem_name) {
    $rehashed = $GEM_REHASH_TEMPLATE -replace '<executable_name_dot_bat>', "$gem_name.bat"

    Set-Content "$where\$gem_name.ps1" $rehashed
}


# rehash for ruby.exe and rubyw.exe
function rehash_for_ruby_exe ($where) {
    $rehashed = $RUBYEXE_REHASH_TEMPLATE -replace '<executable_name_dot_exe>', "ruby.exe"
    Set-Content "$where\ruby.ps1" $rehashed

    $rehashed = $RUBYEXE_REHASH_TEMPLATE -replace '<executable_name_dot_exe>', "rubyw.exe"
    Set-Content "$where\rubyw.ps1" $rehashed
    success "rbenv: rehash ruby.exe rubyw.exe"
}


# called every time after you install a new Ruby version
function rehash_all ($where) {
    rehash_for_ruby_exe $where

    $bats = Get-ChildItem "$where\*.bat" | % { $_.Name}

    # remove .bat suffix
    $gems = $bats | % { strip_ext $_}

    foreach ($gem in $gems) {
        rehash_for_a_single_gem $where $gem
    }
    success "rbenv: rehash $($gems.Count) gems"
    success "rbenv: success rehash all for $where"
}


if (!$cmd) {
    $where = "$env:RBENV_ROOT\shims\bin"
    rehash_all $where
} else {
    $version = auto_fix_version_for_installed $cmd
    $where = "$env:RBENV_ROOT\$version\bin"
    rehash_all $where
}
